{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/cfdna/master/nextflow_schema.json",
    "title": "nf-core/cfdna pipeline parameters",
    "description": "Pipeline to run analyses on cfDNA sequenced by long-read technologies such as Oxford Nanopore",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "outdir"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/cfdna/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "/workspaces/nf-core-cfdna/test_data/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ],
    "properties": {
        "txn_strength": {
            "type": "number",
            "description": "Transition pseudo-counts",
            "default": 10000
        },
        "txnE": {
            "type": "number",
            "description": "Self-transition probability",
            "default": 0.9999
        },
        "estimate_sc_prevalence": {
            "type": "string",
            "description": "Estimate subclonal prevalence in ichorCNA",
            "default": "False"
        },
        "estimate_ploidy": {
            "type": "boolean",
            "description": "Estimate tumour ploidy in ichorCNA",
            "default": true
        },
        "estimate_normal": {
            "type": "boolean",
            "description": "Estimate normal contamination in ichorCNA",
            "default": true
        },
        "genome_style": {
            "type": "string",
            "description": "Genome style for IchorCNA (NCBI or UCSC)",
            "default": "UCSC"
        },
        "genome_build": {
            "type": "string",
            "description": "Genome build for ichorCNA",
            "default": "hg38"
        },
        "chr_train": {
            "type": "string",
            "default": "c(1:22)",
            "description": "List of chromosomes to estimate params for ichorCNA"
        },
        "chrs": {
            "type": "string",
            "description": "List of chromosomes to analyze for ichorCNA",
            "default": "c(1:22, \\\"X\\\")"
        },
        "homd": {
            "type": "boolean",
            "description": "True or False to include or exclude HOMD state for ichorCNA"
        },
        "normal_panel": {
            "type": "string",
            "description": "Path to file containing median corrected depth from panel of normals for ichorCNA",
            "default": "/opt/ichorCNA/inst/extdata/HD_ULP_PoN_hg38_500kb_median_normAutosome_median.rds"
        },
        "custom_centromere": {
            "type": "string",
            "description": "Path to the file containing Centromere locations for IchorCNA",
            "default": "/opt/ichorCNA/inst/extdata/GRCh38.GCA_000001405.2_centromere_acen.txt"
        },
        "custom_mapWig": {
            "type": "string",
            "description": "Path to mappability score WIG file for IchorCNA",
            "default": "/opt/ichorCNA/inst/extdata/map_hg38_500kb.wig"
        },
        "custom_gcWig": {
            "type": "string",
            "description": "Path to GC-content WIG file for IchorCNA",
            "default": "/opt/ichorCNA/inst/extdata/gc_hg38_500kb.wig"
        },
        "custom_maxCN": {
            "type": "integer",
            "description": "Total clonal CN states for IchorCNA",
            "default": 5
        },
        "custom_ploidy": {
            "type": "string",
            "description": "Initial tumour ploidy for IchorCNA",
            "default": "c(2,3)"
        },
        "minmapq_wig": {
            "type": "integer",
            "description": "Minimum MAPQ for IchorCNA",
            "default": 20
        },
        "bin_size": {
            "type": "integer",
            "default": 500000,
            "description": "Bin size for IchorCNA"
        },
        "chr_wig": {
            "type": "string",
            "default": "chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chrX,chrY",
            "description": "Chromosomes to be included in the CNV analyses (hmm_copy step)"
        },
        "max_length": {
            "type": "integer",
            "default": 700,
            "description": "Maximum read length"
        },
        "qual": {
            "type": "integer",
            "default": 10,
            "description": "Minimum phred quality score"
        },
        "ref": {
            "type": "string",
            "description": "Path to the reference genome"
        }
    }
}
